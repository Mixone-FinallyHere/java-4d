/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * rendererFrame.java
 *
 * Created on 8-ago-2009, 15.35.11
 */

package java4d.graphicRenderer;
import com.jogamp.opengl.util.Animator;
import javax.media.opengl.awt.GLJPanel;

/**
 *
 * @author Pierantonio
 */
public class myRendererFrame extends javax.swing.JFrame {

    private Animator anim;
    private myGlEventListener listener;

    /** Creates new form rendererFrame */
    public myRendererFrame() {
        initComponents();
        listener=new myGlEventListener(this);
        gLJPanel1.addGLEventListener(listener);
        anim=new Animator(gLJPanel1);
    }

    public void startAnimator()
    {
        anim.start();
    }

    public void stopAnimator()
    {
        anim.stop();
    }

    public myGlEventListener getGlEventListener()
    {
        return listener;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem3 = new javax.swing.JCheckBoxMenuItem();
        gLJPanel1 = new GLJPanel();

        jMenu1.setText("jMenu1");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("MESH objects");
        jCheckBoxMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/java4d/images/iconMESH.png"))); // NOI18N
        jCheckBoxMenuItem1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxMenuItem1ItemStateChanged(evt);
            }
        });
        jMenu1.add(jCheckBoxMenuItem1);

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("DUMY objects");
        jCheckBoxMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/java4d/images/iconDUMY.png"))); // NOI18N
        jCheckBoxMenuItem2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxMenuItem2ItemStateChanged(evt);
            }
        });
        jMenu1.add(jCheckBoxMenuItem2);

        jCheckBoxMenuItem3.setSelected(true);
        jCheckBoxMenuItem3.setText("LITE objects");
        jCheckBoxMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/java4d/images/iconLITE.png"))); // NOI18N
        jCheckBoxMenuItem3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxMenuItem3ItemStateChanged(evt);
            }
        });
        jMenu1.add(jCheckBoxMenuItem3);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        gLJPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        gLJPanel1.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                gLJPanel1MouseWheelMoved(evt);
            }
        });
        gLJPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gLJPanel1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                gLJPanel1MousePressed(evt);
            }
        });
        gLJPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                gLJPanel1MouseDragged(evt);
            }
        });

        javax.swing.GroupLayout gLJPanel1Layout = new javax.swing.GroupLayout(gLJPanel1);
        gLJPanel1.setLayout(gLJPanel1Layout);
        gLJPanel1Layout.setHorizontalGroup(
            gLJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 529, Short.MAX_VALUE)
        );
        gLJPanel1Layout.setVerticalGroup(
            gLJPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 372, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gLJPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gLJPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents



   
    // <editor-fold defaultstate="collapsed" desc="gLJPanel mouse handling">

    private int axtmp,aytmp,axstart,aystart;
    private int txtmp,tytmp,txstart,tystart;

    private void gLJPanel1MouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_gLJPanel1MouseWheelMoved
        listener.dist+=evt.getWheelRotation() * 50;
    }//GEN-LAST:event_gLJPanel1MouseWheelMoved
    @SuppressWarnings("static-access")
    private void gLJPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gLJPanel1MouseDragged

        if(evt.getModifiers()==evt.BUTTON1_MASK)
        {
            listener.anglex=(axtmp+(axstart - evt.getX())) % 360;
            listener.angley=(aytmp+(aystart - evt.getY()))% 360;
        }
        if(evt.getModifiers()==evt.BUTTON3_MASK)
        {
            listener.transpx=txtmp+(txstart - evt.getX());
            listener.transpy=tytmp+(tystart - evt.getY());
        }
    }//GEN-LAST:event_gLJPanel1MouseDragged

    @SuppressWarnings("static-access")
    private void gLJPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gLJPanel1MousePressed

            txstart=axstart=evt.getX();
            tystart=aystart=evt.getY();
            axtmp=listener.anglex;
            aytmp=listener.angley;
            txtmp=listener.transpx;
            tytmp=listener.transpy;
    }//GEN-LAST:event_gLJPanel1MousePressed

    private void jCheckBoxMenuItem1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ItemStateChanged
        if(evt.getStateChange() == evt.SELECTED)
        {listener.paintmesh=true;
        }else{
        listener.paintmesh=false;
        }
        listener.updateRendering();
    }//GEN-LAST:event_jCheckBoxMenuItem1ItemStateChanged

    private void jCheckBoxMenuItem2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem2ItemStateChanged
        if(evt.getStateChange() == evt.SELECTED)
        {listener.paintdumy=true;
        }else{
        listener.paintdumy=false;
        }
        listener.updateRendering();
    }//GEN-LAST:event_jCheckBoxMenuItem2ItemStateChanged

    private void jCheckBoxMenuItem3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem3ItemStateChanged
        if(evt.getStateChange() == evt.SELECTED)
        {listener.paintlite=true;
        }else{
        listener.paintlite=false;
        }
        listener.updateRendering();
    }//GEN-LAST:event_jCheckBoxMenuItem3ItemStateChanged

    private void gLJPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gLJPanel1MouseClicked
        if(evt.getButton()==evt.BUTTON3)
        {
            jMenu1.getPopupMenu().show(this, evt.getXOnScreen()-this.getX() , evt.getYOnScreen()-this.getY());
        }
    }//GEN-LAST:event_gLJPanel1MouseClicked
// </editor-fold>

    

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new myRendererFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private GLJPanel gLJPanel1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem3;
    private javax.swing.JMenu jMenu1;
    // End of variables declaration//GEN-END:variables

}
